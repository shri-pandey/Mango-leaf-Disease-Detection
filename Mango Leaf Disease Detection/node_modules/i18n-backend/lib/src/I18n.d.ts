export interface Translation {
    [key: string]: {
        [key: string]: {
            [key: string]: string;
        };
    };
}
export interface Options {
    type: 'memory' | 'remote';
    remoteUrl?: string;
    translation?: Translation;
    locale: string;
    defaultNS: string;
    missingPrefix?: string;
}
export declare class I18nInstance {
    private locale;
    private defaultNS;
    private translation;
    private fetchInterval;
    private missingPrefix;
    init(options: Options): Promise<void>;
    setTranslation(translation: any): void;
    setLocale(locale: any): this;
    getLocale(locale: any): string;
    t(key: string, replacements?: Object): any;
    t(ns: string, key: string, replacements?: Object): any;
    private translate(namespace, key, replacements);
    private fetchTrans(url);
    private replace(trans, replacements);
}
declare const I18n: I18nInstance;
export default I18n;
