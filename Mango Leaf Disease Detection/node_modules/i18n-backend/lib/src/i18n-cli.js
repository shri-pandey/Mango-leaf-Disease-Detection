#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require('fs');
var path = require('path');
var jsonFormat = require('json-format');
var program = require('commander');
var fetchTranslation_1 = require("./fetchTranslation");
process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';
function kebab2camel(str) {
    return str.replace(/(\-[A-Za-z])/g, function (m) {
        return m.toUpperCase().replace('-', '');
    });
}
var USAGE = [
    'Usage: i18n-backend -u http://api/json_project/test',
    'Download language json file.',
].join('\n');
program
    .version('0.0.0')
    .option('-u, --url [value]', 'example: http://api/json_project/test')
    .option('-d, --dest [value]', 'default: \'./src/locale\'')
    .option('-h, --host [value]', 'proxy host')
    .option('-p, --port [value]', 'proxy port')
    .option('-e, --extension [value]', 'default: js')
    .parse(process.argv);
if (!program.url) {
    program.help();
}
var url = program.url;
var dest = program.dest || './src/locale';
var ext = program.extension || 'js';
var config = {
    type: 'space',
    size: 2,
};
fetchTranslation_1.default(url, program.host, program.port).then(function (json) {
    if (!fs.existsSync(path.join(process.cwd(), dest))) {
        fs.mkdirSync(path.join(process.cwd(), dest));
    }
    var indexData = '';
    var exportDefault = 'module.exports = {\n';
    Object.keys(json.data).map(function (key) {
        fs.writeFileSync(path.join(process.cwd(), dest, key + ".json"), jsonFormat(json.data[key], config));
        indexData += "const " + kebab2camel(key) + " = require('./" + key + ".json');\n";
        exportDefault += "  " + key + ": " + kebab2camel(key) + ",\n";
    });
    exportDefault += '};\n';
    fs.writeFileSync(path.join(process.cwd(), dest, "index." + ext), indexData + exportDefault);
}).catch(function (error) {
    console.error(error);
    process.exit(1);
});
